.caret-solid(@direction, @width) {
  & when not (@direction = left) {
    &:after {
      display: inline-block;
      width: 0;
      height: 0;
      margin-left: @width;
      content: '';

      & when (@direction = down) {
        border-top: @width solid;
        border-right: @width solid transparent;
        border-bottom: 0;
        border-left: @width solid transparent;
        vertical-align: @width * 0.85;
      }

      & when (@direction = up) {
        border-top: 0;
        border-right: @width solid transparent;
        border-bottom: @width solid;
        border-left: @width solid transparent;
        vertical-align: @width * 0.85;
      }

      & when (@direction = right) {
        border-top: @width solid transparent;
        border-bottom: @width solid transparent;
        border-left: @width solid;
      }
    }
  }

  & when (@direction = left) {
    &:before {
      display: inline-block;
      width: 0;
      height: 0;
      margin-right: @width;
      border-top: @width solid transparent;
      border-right: @width solid;
      border-bottom: @width solid transparent;
      content: '';
    }
  }
}

.caret-outline(@direction, @width) {
  & when not (@direction = left) {
    &:after {
      position: relative;
      display: inline-block;
      width: @width;
      height: @width;
      margin-left: @width;
      border-width: 0 1px 1px 0;
      border-style: solid;
      content: '';

      & when (@direction = down) {
        transform: rotate(45deg);
        vertical-align: 3px;
      }

      & when (@direction = up) {
        transform: rotate(225deg);
      }

      & when (@direction = right) {
        transform: rotate(315deg);
        vertical-align: 2px;
      }
    }
  }

  & when (@direction = left) {
    &:before {
      position: relative;
      display: inline-block;
      width: @width;
      height: @width;
      margin-right: @width;
      border-width: 0 1px 1px 0;
      border-style: solid;
      content: '';
      transform: rotate(135deg);
      vertical-align: 2px;
    }
  }
}

.caret(@direction, @width: @caret-width) {
  & when (@so-theme = antd) {
    .caret-outline(@direction; @width);
  }
  & when (@so-theme = antd2) {
    .caret-outline(@direction; @width);
  }
  & when (@so-theme = default) {
    .caret-solid(@direction; @width);
  }
}

.dropdown-svg(@color) {
  // https://github.com/less/less.js/issues/3086
  @fill: escape(@color);
  & when (@so-theme = antd) {
    background: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='@{fill}' d='M753.966545 337.058909L500.363636 611.816727 246.737455 337.058909a34.909091 34.909091 0 1 0-51.316364 47.36l279.272727 302.545455a34.909091 34.909091 0 0 0 51.316364 0l279.272727-302.545455a34.909091 34.909091 0 1 0-51.316364-47.36'%3E%3C/path%3E%3C/svg%3E");
  }
  & when (@so-theme = default) {
    background: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='@{fill}' d='M512 686.08 163.84 337.92 860.16 337.92Z'%3E%3C/path%3E%3C/svg%3E");
  }
  & when (@so-theme = antd2) {
    background: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 1024 1024' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill='@{fill}' d='M512 686.08 163.84 337.92 860.16 337.92Z'%3E%3C/path%3E%3C/svg%3E");
  }
}
